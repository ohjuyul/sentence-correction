# split_ko_correct_8_1_1.py
import os
import sys

TOTAL = 2_228_281
TRAIN = int(TOTAL * 0.8)      # 1,782,624
VAL   = int(TOTAL * 0.1)      #   222,828
TEST  = TOTAL - TRAIN - VAL   #   222,829

BOUND_TRAIN_END = TRAIN                    # 0 .. TRAIN-1
BOUND_VAL_END   = TRAIN + VAL              # TRAIN .. TRAIN+VAL-1

IN_KO = "ko.txt"
IN_COR = "correct.txt"

OUTS = {
    "train": (open("ko.train.txt", "w", encoding="utf-8"), open("correct.train.txt", "w", encoding="utf-8")),
    "val":   (open("ko.val.txt",   "w", encoding="utf-8"), open("correct.val.txt",   "w", encoding="utf-8")),
    "test":  (open("ko.test.txt",  "w", encoding="utf-8"), open("correct.test.txt",  "w", encoding="utf-8")),
}

def main():
    if not os.path.exists(IN_KO) or not os.path.exists(IN_COR):
        print(f"[ERR] Input files not found: {IN_KO}, {IN_COR}")
        sys.exit(1)

    n = 0
    with open(IN_KO, "r", encoding="utf-8") as f_ko, open(IN_COR, "r", encoding="utf-8") as f_cor:
        for n, (ko, cor) in enumerate(zip(f_ko, f_cor)):
            # strip only trailing newline; keep internal spaces
            ko = ko.rstrip("\n")
            cor = cor.rstrip("\n")

            if n < BOUND_TRAIN_END:
                a, b = OUTS["train"]
            elif n < BOUND_VAL_END:
                a, b = OUTS["val"]
            else:
                a, b = OUTS["test"]

            a.write(ko + "\n")
            b.write(cor + "\n")

    # close files
    for (a, b) in OUTS.values():
        a.close()
        b.close()

    # quick report
    print(f"[DONE] Split complete.")
    print(f"  train: 0 .. {BOUND_TRAIN_END-1}  (count={TRAIN:,})")
    print(f"  val  : {BOUND_TRAIN_END} .. {BOUND_VAL_END-1}  (count={VAL:,})")
    print(f"  test : {BOUND_VAL_END} .. {TOTAL-1}            (count={TEST:,})")

if __name__ == "__main__":
    main()

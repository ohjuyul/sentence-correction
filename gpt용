root@986d73f0cf4d:/workspace/sentence/src# python3 train_sanity.py
[Info] Using device: cuda
/usr/local/lib/python3.12/dist-packages/transformers/convert_slow_tokenizer.py:559: UserWarning: The sentencepiece tokenizer that you are converting to a fast tokenizer uses the byte fallback option which is not implemented in the fast tokenizers. In practice this means that the fast version of the tokenizer can produce unknown tokens whereas the sentencepiece version would have converted these unknown tokens into a sequence of byte tokens matching the original piece of text.
  warnings.warn(
[Info] Added missing special tokens to decoder tokenizer.
[Info] Decoder vocab size: 32000
[Info] PAD/BOS/EOS = 3/1/2
/workspace/sentence/src/train_sanity.py:225: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = torch.cuda.amp.GradScaler(enabled=torch.cuda.is_available())
/workspace/sentence/src/train_sanity.py:186: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=torch.cuda.is_available(), dtype=torch.float16):
/usr/local/lib/python3.12/dist-packages/torch/optim/lr_scheduler.py:182: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn(
[step 10] loss(avg): 508.8393 | lr: 6.00e-06 | opt-steps: 10
[step 20] loss(avg): 449.2327 | lr: 1.20e-05 | opt-steps: 20
[step 30] loss(avg): 345.6626 | lr: 1.80e-05 | opt-steps: 30
[step 40] loss(avg): 280.0505 | lr: 2.40e-05 | opt-steps: 40
[step 50] loss(avg): 238.3664 | lr: 3.00e-05 | opt-steps: 50
[step 60] loss(avg): 209.6704 | lr: 3.60e-05 | opt-steps: 60
[step 70] loss(avg): 188.5516 | lr: 4.20e-05 | opt-steps: 70
[step 80] loss(avg): 172.6939 | lr: 4.80e-05 | opt-steps: 80
[step 90] loss(avg): 159.9885 | lr: 5.40e-05 | opt-steps: 90
[step 100] loss(avg): 149.7237 | lr: 6.00e-05 | opt-steps: 100
[step 110] loss(avg): 141.2729 | lr: 6.60e-05 | opt-steps: 110
[step 120] loss(avg): 134.2366 | lr: 7.20e-05 | opt-steps: 120
[step 130] loss(avg): 128.2397 | lr: 7.80e-05 | opt-steps: 130
[step 140] loss(avg): 122.9053 | lr: 8.40e-05 | opt-steps: 140
[step 150] loss(avg): 118.3939 | lr: 9.00e-05 | opt-steps: 150
[step 160] loss(avg): 114.2724 | lr: 9.60e-05 | opt-steps: 160
[step 170] loss(avg): 110.6538 | lr: 1.02e-04 | opt-steps: 170
[step 180] loss(avg): 107.5663 | lr: 1.08e-04 | opt-steps: 180
[step 190] loss(avg): 104.6951 | lr: 1.14e-04 | opt-steps: 190
[step 200] loss(avg): 102.1388 | lr: 1.20e-04 | opt-steps: 200
[SANITY DONE] steps: 200, optimizer-steps: 200, loss(avg): 102.1388

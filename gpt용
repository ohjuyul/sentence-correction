# delete_empty_ko_corrected.py
from pathlib import Path
import json

def is_empty_value(v):
    """빈 문자열 또는 None 여부 확인"""
    return v is None or (isinstance(v, str) and not v.strip())

def should_delete_json(path: Path):
    """JSON 파일에 ko 또는 corrected가 비어있는지 검사"""
    try:
        with path.open("r", encoding="utf-8-sig") as f:
            obj = json.load(f)
    except json.JSONDecodeError:
        return False  # 깨진 JSON은 삭제하지 않음

    if isinstance(obj, dict):
        return is_empty_value(obj.get("ko")) or is_empty_value(obj.get("corrected"))

    return False  # 예상 외 구조는 삭제하지 않음

def main():
    base_dirs = ["./data/train", "./data/valid"]
    deleted_count = 0

    for base_dir in base_dirs:
        for path in Path(base_dir).rglob("*.json"):
            if should_delete_json(path):
                path.unlink()
                deleted_count += 1

    print(f"[done] Deleted {deleted_count} JSON files.")

if __name__ == "__main__":
    main()
